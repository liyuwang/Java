package access;

/*Created by wly on 17-3-3.

访问权限修饰符:
    一个Java应用有很多类,但有些类，并不希望被其他类使用。每个类中都有数据成员，但不是每个成员变量和方法，都允许其他类中调用。
    Java通过访问权限修饰符进行控制。

 一、修饰类:
    Public:可以在其他任意类中被调用。
    Default: 仅可以在同包下的类中被调用。
    Abstract:抽象类，不能被实例化，可包含抽象方法(没有被实现，无具体功能。)，只能衍生子类。
    Final:不能被继承。

 二、修饰变量:
    只能修饰类体中的成员变量；不能修饰方法中声明的局部变量。
    1.可使用权限控制符，参照第四项。
    2.static: 静态变量(类变量、类属性)。为类的公用变量，属于类，对于该类的所有对象来说，static变量只有一份。
              在类被载入时被显示初始化。
    3.final: 常量。
    4.volatile: 可能同时被并存运行的几个线程所控制和修改。
    实例变量: 和类变量对应，即每个对象都拥有各自独立的实例变量。

 三、方法:
    1.可使用权限控制符，参照第四项。
    2.static:静态方法(类方法)。不需要对象，就可以调用(类名.方法名)
             在调用该方法时,不会将对象的引用传递给它，所以在static方法中不可以访问非static成员。
    3.abstract:只有声明部分，方法体为空，具体在子类中完成。
    4.final:不能被子类重载。


 四、类成员的访问权限控制符(即类的方法和成员变量的访问权限控制符):
    访问修饰符    同一个类    同包其他类    不同包子类    不同包非子类
    public         o           o            o             o
    protected      o           o            o
    default        o           o
    (修饰变量时不能显示标注)
    private        o
*/

public class accessSpecifiers {
}
